name: Publish

on:
  release:
    types: [ published ]

jobs:
  docker:
    name: Docker
    runs-on: ubuntu-latest
    environment: Docker Release
    strategy:
      matrix:
        app: [ legacy-api, ocean-api ]
    steps:
      - uses: actions/github-script@9ac08808f993958e9de277fe43a64532a609130e
        id: version
        with:
          script: |
            const semver = context.ref.replace('refs/tags/v', '')
            if (semver.match(/^[0-9]+\.[0-9]+\.[0-9]+$/)) {
              return semver
            }
            throw new Error('not semver')
          result-encoding: string

      - name: Set up QEMU
        uses: docker/setup-qemu-action@27d0a4f181a40b142cce983c5393082c365d1480

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25

      - name: Login to GitHub Container Registry
        uses: docker/login-action@bb984efc561711aaa26e433c32c3521176eae55b
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@7f9d37fa544684fb73bfe4835ed7214c255ce02b
        with:
          push: true
          build-args: APP=${{ matrix.app }}
          platforms: |
            linux/amd64
            linux/arm64
          tags: |
            ghcr.io/defich/${{ matrix.app }}:latest
            ghcr.io/defich/${{ matrix.app }}:${{ steps.version.outputs.result }}
  npm:
    name: NPM
    runs-on: ubuntu-latest
    environment: NPM Release Publishing
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
      - uses: actions/setup-node@9ced9a43a244f3ac94f13bfd896db8c8f30da67a
        with:
          node-version: '16'

      - uses: actions/github-script@9ac08808f993958e9de277fe43a64532a609130e
        id: version
        with:
          script: |
            const semver = context.ref.replace('refs/tags/v', '')
            if (semver.match(/^[0-9]+\.[0-9]+\.[0-9]+$/)) {
              return semver
            }
            throw new Error('not semver')
          result-encoding: string

      - run: npm ci
      - run: npm run all:build
      - run: npm run all:version ${{ steps.version.outputs.result }}

      # Because lerna doesn't update peers deps, although using it "wrongly" this behavior ensures all jellyfish deps are aligned.
      - name: find and replace peerDependencies
        run: |
          find packages/*/package.json -type f -exec sed -i 's#    "defichain": "^0.0.0"#    "defichain": "^${{ steps.version.outputs.result }}"#g' {} \;

      - name: Publish
        run: |
          npm config set //registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN
          npm run all:publish
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
